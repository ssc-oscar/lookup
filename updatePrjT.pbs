#PBS -N updatePT.WHAT.PART
#PBS -A ACF-UTK0011
#PBS -l feature=MACHINE
#PBS -l partition=MACHINE
#PBS -l nodes=1:ppn=1,walltime=23:50:00
#PBS -j oe
#PBS -S /bin/bash
LD_LIBRARY_PATH=$HOME/lib:$HOME/lib64:$LD_LIBRARY_PATH
c=/lustre/haven/user/audris/gz
cd $c
machine=MACHINE
maxM=5000
[[ $machine == monster ]] && maxM=30000
[[ $machine == rho ]] && maxM=900
[[ $machine == sigma ]] && maxM=2900


ver=T
prt=PART

if test 'WHAT' = 'START'; then

for f in $ver/*.p2c
do zcat $f | awk -F\; '{ print $2";"$1}' | perl -ane 'print if $_ =~ m/^[0-f]{40};/'
done | $HOME/lookup/splitSec.perl c2p$ver. 128
#done | perl $HOME/lookup/fixP1.perl | $HOME/lookup/splitSec.perl c2p$ver$inc. 32
echo c2p$ver.

fi
if test 'WHAT' = 'SRT0'; then

for i in {0..3}
do j=$(($prt*4+$i))
  zcat c2p$ver.$j.gz | $HOME/bin/lsort ${maxM}M -t\; -k1,2 -u | gzip > c2p$ver.$j.s
  echo c2p$ver.$j.s
done 

fi
if test 'WHAT' = 'invt'; then

for i in {0..7}
do j=$(($prt*8+$i))
   zcat c2p$ver.$j.s 
done | awk -F\; '{print $2";"$1}' | perl -I ~/lib/perl5 -I ~/lookup $HOME/lookup/splitSecCh.perl p2c$ver.$prt. 128 
echo p2c$ver.$prt.

fi
if test 'WHAT' = 'ISRT0'; then

j=$prt
for i in {0..127}
do zcat p2c$ver.$j.$i.gz | $HOME/bin/lsort ${maxM}M -t\; -k1,1 | gzip > p2c$ver.$j.$i.s 
   echo p2c$ver.$j.$i.s
done

fi
if test 'WHAT' = 'IMRG0'; then

for i in {0..7}
do j=$(($prt*8+$i))
  str="$HOME/bin/lsort ${maxM}M -t\; -k1,1 --merge"
  for k in {0..15}
  do str="$str <(zcat p2c$ver.$k.$j.s)"
  done
  eval $str | uniq | gzip > p2c$ver.$j.s 
  echo p2c$ver.$j.s
done

fi
if test 'WHAT' = 'MERGEc2p'; then

for i in {0..15}
do j=$(($prt*16+$i))
   $HOME/bin/lsort ${maxM}M -t\; -k1,2 --merge -u <(zcat c2p${ver}.$j.s) <(zcat c2pFullS$j.s) | perl -ane 'print if $_ =~ m/^[0-f]{40};/' | uniq | gzip > c2pFull$ver$j.s 
   echo c2pFull$ver$j.s
done

fi
if test 'WHAT' = 'MERGEp2c'; then

for i in {0..7}
do j=$(($prt*8+$i))
   $HOME/bin/lsort ${maxM}M -t\; -k1,2 --merge -u <(zcat p2c${ver}.$j.s) <(zcat p2cFullS$j.s) | perl -ane 'print if $_ =~ m/.+;[0-9a-f]{40}$/' | uniq | gzip > p2cFull$ver$j.s
   echo p2cFull$ver$j.s
done

fi
if test 'WHAT' = 'invFull'; then
#looks like p2c misses some projects

for i in $prt
do j=$i
   zcat c2pFull$ver$j.s
done | awk -F\; '{print $2";"$1}' | perl -I ~/lib/perl5 -I ~/lookup $HOME/lookup/splitSecCh.perl p2cFull$ver.$prt. 128
echo p2cFull$ver.$prt.

fi
if test 'WHAT' = 'isrtFull'; then

j=$prt
for i in {0..127}
do zcat p2cFull$ver.$j.$i.gz | $HOME/bin/lsort ${maxM}M -t\; -k1,1 | gzip > p2cFull$ver.$j.$i.s
   echo p2cFull$ver.$j.$i.s
done

fi
if test 'WHAT' = 'imrgFull'; then

j=$prt
str="$HOME/bin/lsort ${maxM}M -t\; -k1,1 --merge"
for k in {0..127}
do str="$str <(zcat p2cFull$ver.$k.$j.s)"
done
eval $str | uniq | gzip > p2cFull$ver$j.s
echo p2cFull$ver$j.s

fi
if test 'WHAT' = 'PS'; then

for i in {0..7}
do j=$(($prt*8+$i))
   zcat p2cFull${ver}$j.s | cut -d\; -f1| uniq | gzip > p$ver.$j.s 
   echo p$ver.$j.s
done

fi
if test 'WHAT' = 'MPS'; then

str="$HOME/bin/lsort ${maxM}M -t\; -k1,1 --merge"
for k in {0..127}
do str="$str <(zcat p$ver.$k.s)"
done
eval $str | uniq | gzip > p$ver.s
echo p$ver.s

fi
if test 'WHAT' = 'DEFORK'; then
#see defork in forks.pbs 
#
for i in {0..3}
do j=$(($prt*4+$i))
   zcat c2pFull$ver$j.s | perl ~/lookup/mp.perl 1 p2P$ver.s | uniq | $HOME/bin/lsort ${maxM}M -t\; -k1,2 -u  | gzip > c2PFull$ver$j.s 
   echo c2PFull$ver$j.s
done
wait
# need to sort, invert for P2c


fi
